C   16/07/81 509051828  MEMBER NAME  LATTIN   (SEPT95.S)    FORTRAN
      SUBROUTINE LATTIN(RLENGE,IROT,ICOUP)
C
C                     READS THE SLIM INPUT DATA
C
C                J.KEWISCH FEB. 81  + D.BARBER 1982/83
C
C
C    DATA LAYOUT IS THE SAME AS FOR THE THIN LENS PROGRAM BUT IS
C    USED FOR A SLIGHTLY DIFFERENT LATTICE LIST ORGANISATION.
C                      D.BARBER   JUNE /84
C
C    FORMAT=4:  4 MAGNET POSITIONS/LINE & 1/10 MM. UNITS
C    FORMAT=5:  5 MAGNET POSITIONS/LINE & 1/10 MM. UNITS
C    FORMAT=6:  6 MAGNET POSITIONS/LINE &    1 MM. UNITS
C
C   (IRAD.EQ.1) INCLUDES ENERGY JUMPS IN ELEMENTS.
C   ( "  .EQ.0) IGNORES ENERGY JUMPS AND COMPUTES THE CLOSED ORBIT
C               ONLY ONCE BEFORE CALLING CPSIN IN A SEPARATE LOOP.
C   (IPTCO.EQ.0) SKIPS CLOSED ORBIT CALCULATION AND PUTS IN ZERO DEV'N
C   (  "      1) PRINTS OUT CLOSED-ORBIT 6-VECTOR.
C   (  "      2) CALCULATES LINEAR OPTICS TO GET SOME PARAMETERS & THEN
C   (  "      2) SETS C.O.TO ZERO & JUMPS DIRECTLY TO SPIN CALCULATION
C   (ISIG.EQ.1) CALCULATES THE BEAM SIZES AROUND THE RING.
C   (ISIG.EQ.2) CALCULATES THE BEAM SIZES AT INTERSECTION POINTS.
C   (ISPIN .EQ.1) INCLUDES POLARIZATION CALCULATIONS.
C   (IDISP .EQ.1) CALCULATES THE PERTURBED DISPERSION FUNCTIONS.
C   (IPTNML.EQ.1) PRINTS OUT SPIN BASE VECTORS.
C   (IPTD  .EQ.1) PRINTS OUT "D" VECTORS AT DIPOLES WITH NTWIST=1
C   (KICK(MOD 10))SPECIFIES TYPE OF FIELD ERROR AND CAUSES CREATION OF
C                 GAUSSIAN POSITION OR FIELD ERRORS.
C                 KICK(MOD 10)=1 DEFINES THE KICKERS AS VERTICAL.
C                 KICK(MOD 10)=2 DEFINES THE KICKERS AS HORIZONTAL.
C                 KICK(MOD 10)=3 INTRODUCES VERT.QUAD.POSITION ERRORS.
C                 KICK(MOD 10)=4 INTRODUCES HOR. QUAD.POSITION ERRORS.
C                 KICK(MOD 10)=5 INTRODUCES SOLENOID POSITION ERRORS.
C                 KICK(MOD 10)=6 INTRODUCES QUAD. GRADIENT ERRORS.
C                 KICK(MOD 10)=7 INTRODUCES DIPOLE TWIST.
C                 KICK-KICK(MOD 10) GIVES THE NUMBER OF DIFFERENT
C                 DISTRIBUTIONS TO BE TRIED.
C   (SCLKIK.NE.0) TAKES THE VERTICAL CORRECTION COIL CURRENTS &
C                 MULTIPLIES BY SCLKIK TO TEST SENSITIVITY.
C   (ICLBP.EQ.1)  DUMP OUT THE 6-DIM CLOSED ORBIT.
C   (ICLBP.EQ.2)  DUMP OUT THE 6-DIM CLOSED ORBIT & STOP
C   (ITWP .EQ.1)  DUMP OUT THE TWISS PARAMETERS AND STOP
C   (ISECT.EQ.1)  GET 8X8 MATRIX FOR A SECTION OF RING.
C   (MRDISP.EQ.1) USE MAIS & RIPKEN 'DISPERSION FORMALISM' IN CSPIN.
C   (IVROT.EQ.1)  VARY ROTATOR SETTING WITH ENERGY TO KEEP N VERTICAL.
C   =================================================================
C
C
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE "cnlist.for"
      INCLUDE "clatic.for"
      INCLUDE "csol.for"
      INCLUDE "cintpt.for"
      INCLUDE "csex.for"
C
C
C
CDB      DIMENSION TEMP10(4,4)
      DIMENSION XXTEMP(4)
      DIMENSION KPS(2)
      DIMENSION PSUP(100,4)
      DATA PSUP/400*1.D40/
CDB      REAL*8 TNAME
      CHARACTER *4 TEXT(20)
      CHARACTER STRING *80
CDB     STRIN2(80),ANAME(8),C,E,MINUS
CDB      EQUIVALENCE (TNAME,ANAME(1))
CDB      DATA C/'C'/,E/'E'/,MINUS/'-'/
CDB      REAL*8  END/'END'/,DNAME/'D'/,COUP/'COUP'/,ENAME/'EDGE'/
CDB      REAL*8  VNAME/'VKICK'/
CDB      INTEGER BLK/' '/
CDB      REAL*8  BLK2/' '/
CDB      CHARACTER *1 KOM
      CHARACTER *8 NAM(6)
      DIMENSION IPOS(6)
C=====NAMELIST READS THE INPUT PARAMETERS: ENERGY,PRINT-COMMANDS ETC
      NAMELIST/SL/ NTY,NINS,IRAD,ISPIN,IPTCO,IDISP,IPTNML,ISIG,NSTEP,
     + E00,DE0,SIGYBB,ITER,IHARM,KICK,SCLKIK,ICLBP,ITWP,IPTBET,ISECT,
     + ECAV,SFREQ,DFREQ,NFREQ,IPTD,MRDISP,IVROT,ECHROM
      DIMENSION ISEED(20)
C     DATA ISEED/    12345,-987084103, 411346233, 766459833, -934667719,
C    +          1005925561,1817218873,-855889479,1637352505,-1111220551,
C    +            86014265,-347270215,-1276514759,848758969,-889953479,
C    +          1889664441,-1488988103,-2106723655,12345,12345/
      DATA ISEED/    12345, 51233, 45123, 34515, 23451,
     +              112345,151233,145123,134515,123451,
     +              212345,251233,245123,234515,223451,
     +              312345,351233,345123,334515,323451/
C
C
C
C
C
C
C
C
C
C
C
C
C=====SET DEFAULT VALUES
      PI=3.1415926535897932D0
      NINS=1
      IRAD=0
      ISPIN=1
      IPTCO=1
      ITER=3
      IDISP=0
      IPTBET=1
      IPTNML=0
      IHARM=3840
      KICK=0
      SCLKIK=1.D0
      ECHROM=0.D0
      ICLBP=1
      ITWP=0
      ISIG=0
      NSTEP=10
      ISECT=0
      DE0=0.008D+0
      SIGYBB=0.00006D+0
      ECAV=0.D+0
      SFREQ=0.D+0
      DFREQ=0.D+0
      NFREQ=0
      IROT=0
      ICOUP=0
      IFORM=0
      BETAX0=0.D+0
      BETAY0=0.D+0
      NSEX=0
C
C
C      
C
C
C
C=====SET UP UNIT MATRICES
      DO 2 I=1,3000
      DO 2 J=1,7
      DO 2 K=1,7
      TMAT(J,K,I)=0.D+0
      IF(J.EQ.K)TMAT(J,K,I)=1.D+0
    2 CONTINUE
C
C
C
      
      SUMG  = 0.D0
      SUMG2 = 0.D0 
      NG    = 0
C
C
C
      CALL DATI
C
C=====READ & WRITE THE NAMELISTS,MANIPULATE PARAMETERS.
      READ (5,SL)
      CALL IPARAM  

      IF(NSTEP.LE.0)NSTEP=1
      NKICK=(KICK/10)*10
      IKICK=KICK-NKICK
C
C
C
C
C
C=====READ THE DATA FILE HEADING
      READ (52,901)TEXT
      WRITE(53,901)TEXT
      READ (52,901)TEXT
      WRITE(53,901)TEXT
      READ (52,901)TEXT
      WRITE(53,901)TEXT
C
C=====CHECK FORMAT AND RANDOM NUMBER GENERATOR SEEDS.
      CALL RDMOUT(JJSEED)
      READ(52,801)IFORM
      READ(52,805)KSEED
      READ(52,805)NINS
      JSEED=ISEED(KSEED)
      WRITE(53,802)IFORM,JSEED,JJSEED
      IF(IFORM.EQ.4.OR.IFORM.EQ.5.OR.IFORM.EQ.6)GO TO 804
      WRITE(53,803)
      STOP


  804 CONTINUE


      SCL=0.001D+0
      SEP=-0.001001D+0
      SEP=-0.0001001D+0

      IF(IFORM.EQ.5.OR.IFORM.EQ.4)SCL=0.0001D+0
C      IF(IFORM.EQ.5.OR.IFORM.EQ.4)SEP=-0.0001001D+0
C      IF(IFORM.EQ.5.OR.IFORM.EQ.4)SEP=-0.001001D+0
      IF(IFORM.EQ.5.OR.IFORM.EQ.4)SEP=-0.001101D+0
C     IF(IFORM.EQ.5.OR.IFORM.EQ.4)SEP=-0.0051001D+0
C
C
C
      IF(IVROT.NE.0)CALL CHROTN(E00,0,1)
      CALL RDMIN(JSEED)
C
C
C
C
      NTY=1
C=====LOOP TO READ THE MAGNET PARAMETERS & CHECK FOR COMMENTS.
      WRITE(53,952)
   26 READ(52,'(A)',END=999)STRING
CDB   WRITE(53,951)STRING

      IF(STRING(:1).NE.' ')THEN
      WRITE(53,'(1X,A,A)')STRING, '  Comment'
      GO TO 26


      ELSE

      NAME(NTY)=' '
      IF(IFORM.EQ.4)READ(STRING,99)KOM,ID(NTY),NAME(NTY),XX(NTY),
     +                   X2(NTY),YY(NTY),NUNT(NTY),TWIST(NTY),NSOL(NTY)

CDB      IF(ID(NTY).EQ.3)CALL DEQUAD(ANAME,KPS,IKICK)
CDB     IF(ID(NTY).EQ.3)WRITE(53,599)KPS
CDB 599 FORMAT(' ',2I5)
      IF(IFORM.NE.4)READ(STRING,89)KOM,ID(NTY),NAME(NTY),XX(NTY),
     +                   X2(NTY),YY(NTY),NUNT(NTY),TWIST(NTY),NSOL(NTY)
      NTWIST(NTY)=TWIST(NTY)
CDB      IF(KOM.NE.BLK)GO TO 26
      WRITE(53,89)KOM,ID(NTY),NAME(NTY),XX(NTY),X2(NTY),YY(NTY),             
     +        NUNT(NTY),TWIST(NTY),NSOL(NTY)


      ENDIF


      IF(NAME(NTY)(1:3).EQ.'END')GO TO 3

      SNAME(NTY)= '--------'


C
C=====REMOVE ELEMENT SUBDIVISION
C      XX(NTY)=XX(NTY)*NUNT(NTY)
C      X2(NTY)=X2(NTY)*NUNT(NTY)
C      NUNT(NTY)=1.D0
C=====Subdivide the CF magnets for Bates.
      IF(ID(NTY).NE.15.AND.ID(NTY).NE.2)GO TO 192
C      IF(ID(NTY).NE.15)GO TO 192
C      IF(nunt(nty).eq.1)go to 192                
C      XX(NTY)=XX(NTY)/16.D+0                                                    
C      X2(NTY)=X2(NTY)/16.D+0
C      NUNT(NTY)=16                                                    
      XX(NTY)=XX(NTY)/2.D+0                                                    
      X2(NTY)=X2(NTY)/2.D+0
      NUNT(NTY)=2          
  192 CONTINUE            



C
C=====MODIFY LENGTHS ACCORDING TO MAGNET SUBDIVISION REQUESTED.
C     YY(NTY)=IDINT(YY(NTY)*1000.D0+0.5)/1000.D0
C=====14/10/85 KILL NEXT LINE. WHAT WAS IT FOR?
C     YY(NTY)=IDINT(YY(NTY)*1000.D0+0.5*0.D0)/1000.D0
       

      IF(NUNT(NTY).GT.1)YY(NTY)=YY(NTY)/NUNT(NTY)
CDB      IID=ID(NTY)
C=====INPUT SOLENOID STRENGTH REFERS TO THE WHOLE SOLENOID--SO DIVIDE
C=====IT UP.NOTE CONTRAST WITH OTHER CASES WHERE THE DIVISION WAS DONE
C=====AS THE PETROS FILE WAS READ AND CONVERTED.
      IF(NUNT(NTY).GT.1.AND.ID(NTY).EQ.10)XX(NTY)=XX(NTY)/NUNT(NTY)
C     IF(NUNT(NTY).GT.1.AND.ID(NTY).EQ.10)XX(NTY)=XX(NTY)*29.23/14.
C
C
C
C=====OVERWRITE KICKER FIELDS WITH GAUSSIAN DISTRIBUTION OR ZEROS.
C     August 2003: clean this up using a better F77 construction.
C     And choose kickers by name. 
C     Note that the kickers for shifting quads are set later.

      IF(IKICK.EQ.0) GO TO 79
      IF(ID(NTY).NE.6.AND.ID(NTY).NE.7)GO TO 76

      IF(IKICK.EQ.1.AND.ID(NTY).EQ.7.AND.NAME(NTY)(1:2).EQ.'WC')THEN  
      WRITE(53,'(A,1X,A)')'BULLSHIT', NAME(NTY)(1:2)
   77 CALL RANNOR(GAUS1,GAUS2)
      IF(DABS(GAUS2).LE.1.D0)GO TO 78
      IF(DABS(GAUS2).GT.1.D0)GO TO 77
   78 XX(NTY)=1.E-3*GAUS2*SCLKIK
      ENDIF


      IF(IKICK.EQ.2.AND.ID(NTY).EQ.6)THEN
      CALL RANNOR(GAUS1,GAUS2)
      XX(NTY)=1.E-3*GAUS2*SCLKIK
      ENDIF


   76 CONTINUE
      IF(ID(NTY).NE.3.OR.IKICK.NE.6) GO TO 79
C=====PUT ERRORS ON QUAD STRENGTHS.: ASSUME L/R SYMMETRY.
      IF(PSUP(KPS(1),KPS(2)).GT.1.D20)CALL RANNOR(GAUS1,GAUS2)
      IF(PSUP(KPS(1),KPS(2)).GT.1.D20)
     +                            PSUP(KPS(1),KPS(2))=1.E-3*GAUS2*SCLKIK
      IF(PSUP(KPS(1),KPS(2)).LT.1.D20)
     +                        XX(NTY)=XX(NTY)*(1.D0+PSUP(KPS(1),KPS(2)))
   79 CONTINUE
C
C
C
C
C=====SET UP 6X6 TRANSFER MATRICES.
      J=ID(NTY)
      IF(J.EQ.99)GO TO 1044
      GO TO(105,106,107,108,109,110,111,117,112,113,114,115,115,116,
C             D   B   Q  QK  RF  HK  VK  SX  BY SOL  RQ FBH FBV ROT
     +118,119),J
C     CFH CFV
      WRITE(53,96) J
      STOP
  999 WRITE (53,950)
      STOP
C=====DRIFT: STRENGTH=LENGTH:GET IT (EXCEPTIONALLY) FROM YY.ALSO STORE
C=====IN XX
  105 TMAT(1,2,NTY)= YY(NTY)
      TMAT(3,4,NTY)= YY(NTY)
      XX(NTY)=YY(NTY)
      GO TO 1044
C=====HORIZONTAL BENDING + EDGE FIELD.
C=====TO SET UP EDGE FIELD MATRIX USE THIN LENS QUAD.SET LENGTH TO SMALL
C=====TO MAINTAIN ORBIT LENGTH & STORE XX AS ZERO TO AVOID RESULTING
C=====LARGE RADIATION EFFECTS.SLOT INTO THE TYPE LIST BEHIND THE DIPOLE
  106 IF(IVROT.NE.0)CALL CHROTN(E00,NTY,2)
      CALL DIPH(XX(NTY),YY(NTY),TMAT(1,1,NTY))
      NTY=NTY+1
      CALL HEDGE(XX(NTY-1),YY(NTY-1),TMAT(1,1,NTY),NUNT(NTY-1),
     +                               XX(NTY),X2(NTY),NSOL(NTY-1))
      NAME(NTY)='EDGE'
      SNAME(NTY)= '--------'
      NUNT(NTY)=1
      XX(NTY)=0.D0
      X2(NTY)=0.D0
      YY(NTY)=1.D-10
      ID(NTY)=3
      GO TO 1044
C=====NORMAL QUAD
  107 CALL THIQAD(XX(NTY),YY(NTY),IKICK,NTY,TMAT(1,1,NTY),0.D0)
      GO TO 1044
C=====SKEW QUAD
  108 CALL SKEWQD(XX(NTY),YY(NTY),IKICK,NTY,TMAT(1,1,NTY),0.D0)
      GO TO 1044
C=====CAVITY
  109 TMAT(6,5,NTY)= XX(NTY)
      GO TO 1044
C=====HOR. KICKER-----USE THIN LENS TYPE MATRIX ELEMENTS.
  110 TMAT(2,6,NTY)= XX(NTY)
      TMAT(5,1,NTY)=-XX(NTY)
      TMAT(2,7,NTY)=-XX(NTY)
C======For Bates from MAD put in some lengths by hand.
C      YY(NTY)=0.1D0 
C     TMAT(1,2,NTY)=YY(NTY)
C     TMAT(3,4,NTY)=YY(NTY)
      GO TO 1044
C=====VERT KICKER-----USE THIN LENS TYPE MATRIX ELEMENTS:M&R SIGNS
  111 TMAT(4,6,NTY)=+XX(NTY)
      TMAT(5,3,NTY)=-XX(NTY)
      TMAT(4,7,NTY)=-XX(NTY)
C      YY(NTY)=0.1D0
C     TMAT(1,2,NTY)=YY(NTY)
C     TMAT(3,4,NTY)=YY(NTY)
      GO TO 1044
C=====VERTICAL BEND
  112 IF(IVROT.NE.0)CALL CHROTN(E00,NTY,2)
      CALL DIPV(XX(NTY),YY(NTY),TMAT(1,1,NTY))
      GO TO 1044
  113 CONTINUE
C=====USE G.RIPKEN'S 7X7 MATRICES FOR SHIFTED SOLENOIDS.
C=====CHECK PREVIOUS ELEMENT TO SEE IF IT IS A SPLIT SOLENOID.
      ISPLIT=0
      IF(ID(NTY-1).EQ.10.AND.XX(NTY-1)*XX(NTY).GT.0.D0)ISPLIT=1
      CALL SOL77(XX(NTY),YY(NTY),TMAT(1,1,NTY),IKICK,ISPLIT,TWIST(NTY))
      GO TO 1044
C=====THIN ROTATED QUADS.
  114 CALL ROQUAD(NTY)
      GO TO 1044
  115 CONTINUE
      WRITE(53,953)
      STOP
C=====UNCOUPLED SECTION OF ROTATOR
C 116 CALL ROTATR(NTY)
  116 CALL SNAKE(NTY)
      IROT=1
      GO TO 1044
C=====SEXTUPOLE:SET UP AS A DRIFT TO START WITH.
C=====FOR 2-FAMILY CORRECTION,LABEL ACCORDING TO HERA LENGTHS.
  117 TMAT(1,2,NTY)= YY(NTY)
      TMAT(3,4,NTY)= YY(NTY)
C     NSEX=NSEX+1
C     ISEXFM(NTY)=NSEX
      IF(YY(NTY).GT.0.61.AND.YY(NTY).LT.0.63)ISEXFM(NTY)=1
      IF(YY(NTY).GT.0.27.AND.YY(NTY).LT.0.29)ISEXFM(NTY)=2
      GO TO 1044
C=====HORIZONTAL COMBINED FUNCTION DIPOLE
  118 CALL CFDIPH(XX(NTY),X2(NTY),YY(NTY),TMAT(1,1,NTY),0.D0)
C=====Put in an edge field just as for hor dipoles.
      NTY=NTY+1
      XIN=XX(NTY-1)
      XIN=0.D0
      CALL HEDGE((XIN),YY(NTY-1),TMAT(1,1,NTY),NUNT(NTY-1),
     +                               XX(NTY),X2(NTY),NSOL(NTY-1))
      NAME(NTY)='EDGE'
      SNAME(NTY)= '--------'
      NUNT(NTY)=1
      XX(NTY)=0.D0
      X2(NTY)=0.D0
      YY(NTY)=1.D-10
      ID(NTY)=3
      GO TO 1044
C=====VERTICAL COMBINED FUNCTION DIPOLE
  119 CALL CFDIPV(XX(NTY),X2(NTY),YY(NTY),TMAT(1,1,NTY),0.D0)
      GO TO 1044
C
C
C
C=====SET UP A FIRST DRIFT OF ZERO LENGTH----THIS IS NOT THE I.P.!
C=====THE I.P. WILL BE THE 3RD ELEMENT!---AFTER THIS DUMMY ELEMENT & THE
C=====FOLLOWING ZERO LENGTH DRIFT.
 1044 NTY=NTY+1
      IF(NTY.LE.3000)GO TO 26
      WRITE(53,94)
CDB      WRITE(53,2063)NTY
CDB 2063 FORMAT(' ','NUMBER OF ELEMENT TYPES',I10)
      STOP
    3 CONTINUE
C     DO 144 I=1,NTY
C 144 WRITE(53,97)I,ID(I),NAME(I),XX(I),X2(I),YY(I),NUNT(I),TWIST(I),
C    +SNAME(I) ,NSOL(I),NTWIST(I)
      ND1=NTY
      NAME(NTY)='DRIFT'
      SNAME(NTY)= '--------'
      ID(NTY)=1
      XX(NTY)=0.D0
      YY(NTY)=0.D0
      NT1=NTY-1

      NELEM=1
      ITYPE(1)=NTY
      IREAD=0
      TOTDIP=0.
C
C
C
C
C=====READ THE STRUCTURE OF THE RING INTO STORAGE.
C=====CAVITIES & KICKERS GET ZERO LENGTH (FOR CAVITIES YY=0 ON INPUT)
C=====EVERYTHING ELSE INCLUDING SEXTUPOLES GETS ITS ACTUAL LENGTH.
C=====Set the memory for quadrupole strength to apply with the kickers giving shifts. 
      QREM= 0.D0 

      WRITE(53,93)
    4 CONTINUE
      IF(IFORM.EQ.6)READ(52,92  ,END=30) (NAM(KK),IPOS(KK),KK=1,6)
      IF(IFORM.EQ.5)READ(52,922 ,END=30) (NAM(KK),IPOS(KK),KK=1,5)
      IF(IFORM.EQ.4)READ(52,9222,END=30) (NAM(KK),IPOS(KK),KK=1,4)
      IF(IREAD.EQ.0)TOTL=IPOS(1)*SCL
      IREAD=1
      IF(IFORM.EQ.6)WRITE(53,95)  (NAM(KK),IPOS(KK),KK=1,6)
      IF(IFORM.EQ.5)WRITE(53,955) (NAM(KK),IPOS(KK),KK=1,5)
      IF(IFORM.EQ.4)WRITE(53,9555)(NAM(KK),IPOS(KK),KK=1,4)


C======Loop over each row that has been read.
      DO 13 KK=1,IFORM
      IF(NAM(KK).EQ.'        ')GO TO 13
      IF(NAM(KK).EQ.'END')GO TO 30
      IF(NAM(KK).EQ.'COUP')ICOUP=1
      IF(NAM(KK).EQ.'COUP')GO TO 30
      IREM=0

C=====SEARCH FOR NAME IN TYPE LIST.
      DO 5 INN=1,NT1
      IN = INN
      IF(NAM(KK).NE.NAME(IN))GO TO 5
      IREM=ID(IN)
      GO TO 6
    5 CONTINUE
      WRITE(53,91)NAM(KK)
      STOP
    6 NU=NUNT(IN)
      NUS=NU
      IF(ID(IN).EQ.2.OR.ID(IN).EQ.15)TOTDIP=TOTDIP+YY(IN)*NUNT(IN)
      PLT=IPOS(KK)*SCL
      PL=PLT-YY(IN)*NU*0.5D0-TOTL
C      WRITE(53,987)KK,IREM,NU,PLT,PL,YY(IN),TOTL
C  987 FORMAT(' ',3I5,4F12.4)
C=====SOL.AND ERSATZ CASE WHERE ENTRANCE COORDS(NOT CENTRES) ARE GIVEN.
C======Can comment this out for files from MAD via SPRINT. But it doesn't work!????
      IF(IREM.EQ.10.OR.IREM.EQ.14)PL=PLT-TOTL
C
C=====HOR. & VERT. KICKERS WHICH ARE GIVEN ZERO LENGTH IN THE LATTICE.
      IF(IREM.EQ. 6.OR.IREM.EQ. 7)PL=PLT-TOTL
C      WRITE(53,987)KK,IREM,NU,PLT,PL,YY(IN),TOTL
C  987 FORMAT(' ',3I5,4F12.4)
C
C======If a quad has been reached, save the strength for use with a v. kicker later.
      IF(IREM.EQ.3)QREM = XX(IN)
C
C
C=====CONSTRUCT THE DRIFT SPACE UP TO THE NEXT THICK LENS.
   11 DO 7 I=ND1,NTY
      IF(DABS(PL*1000.D0-XX(I)*1000.D0).LT.0.1000001D0)GO TO 10
    7 CONTINUE
      NTY=NTY+1
CDB      WRITE(53,2063)NTY
      IF(NTY.LE.3000)GO TO 8
      WRITE(53,94)
CDB      WRITE(53,2063)NTY
      STOP
    8 CONTINUE
      SNAME(NTY)=NAME(IN)
      NAME(NTY)= 'DRIFT'
      ID(NTY)=1
C=====TAKE CARE OF DIGITISATION ERRORS ON INPUT FILE--LIMIT GIVEN BY SEP
      IF(PL.GE.SEP.AND.PL.LT.0.0D0)PL=0.D0
C     IF(PL.GE.-0.0006.AND.PL.LT.0.0D0)PL=0.D0
      XX(NTY)=PL
      YY(NTY)=PL
      TMAT(1,2,NTY)= PL
      TMAT(3,4,NTY)= PL
      I=NTY
   10 NELEM=NELEM+1
      IF(NELEM.LE.15000)GO TO 12
      WRITE(53,907)TOTL,NELEM
      STOP
   12 ITYPE(NELEM)=I
  211 CONTINUE
C=====FOR HORIZONTAL DIPOLES or HORIZONTAL CF SLOT IN THE EDGE FIELD QUADS: F/B
C=====ALSO SLOT IN A VERTICAL KICKER TO SIMULATE ROLE.
      IF(IREM.EQ.2.OR.IREM.EQ.15)NELEM=NELEM+1
      IF(IREM.EQ.2.OR.IREM.EQ.15)ITYPE(NELEM)=IN+1
      NKI=0
C======August 2003: Kill these inserted vertical kicks.
C      IF(IKICK.EQ.7.AND.IREM.EQ.2)CALL RANNOR(GAUS1,GAUS2)
C      IF(IKICK.EQ.7.AND.IREM.EQ.2)GAUSSN=GAUS1/DABS(GAUS1)
      DO 212 INU=1,NU
      NELEM=NELEM+1
      ITYPE(NELEM)=IN
C======August 2003: Kill these inserted vertical kicks.
      IF(1.EQ.1)GO TO 212
      IF(NU.NE.2.OR.INU.NE.1)GO TO 212
      IF(IREM.NE.2.OR.IREM.EQ.15)GO TO 212
      NKI=NKI+1
      NTY=NTY+1
      NELEM=NELEM+1
      ITYPE(NELEM)=NTY
      NAME(NTY)='VKICK'
      SNAME(NTY) = NAME(IN)
      XX(NTY)=0.D0
      YY(NTY)=0.1D0
      ID(NTY)=7
C  771 CALL RANNOR(GAUS1,GAUS2)
  771 CALL RANNOR(GAUS1,GAUS2)
C      IF(DABS(GAUS2).GT.1.D0)GO TO 771
      XX(NTY)=1.E-3*XX(IN)   * 0.0D0                 !*0.5D0*GAUS2
      TMAT(4,6,NTY)=+XX(NTY)
      TMAT(5,3,NTY)=-XX(NTY)
      TMAT(4,7,NTY)=-XX(NTY)
  212 CONTINUE
      IF(IREM.EQ.2.OR.IREM.EQ.15)NELEM=NELEM+1
      IF(IREM.EQ.2.OR.IREM.EQ.15)ITYPE(NELEM)=IN+1
C     NU=NU-1
C     IF(NU.GT.0)GO TO 211
C=====RE-ANCHOR THE LATTICE ON THIS ELEMENT BEFORE PROCEEDING.
      TOTL=YY(IN)*NUS*0.5D0+PLT
      IF(IREM.EQ.10.OR.IREM.EQ.14)TOTL=YY(IN)*NUS+PLT
      IF(IREM.EQ. 6.OR.IREM.EQ. 7)TOTL=PLT
C
C======Set the strength of v. kickers used to shift quads.
C      Allow the quads a maximum misplacement of 0.3mm. This can be scaled.
C      This ``Gaussian'' is strange. Only collect checking statistics inside 15 sigma.
      QMIS = 0.3D-3
      IF(IKICK.EQ.1.AND.IREM.EQ.7.AND.NAME(IN)(1:2).EQ.'VQ')THEN  
  777 CALL RANNOR(GAUS1,GAUS2)
      IF(DABS(GAUS2).LE.15.D0)SUMG2 = SUMG2 + GAUS2*GAUS2
      IF(DABS(GAUS2).LE.15.D0)SUMG  = SUMG  + GAUS2
      IF(DABS(GAUS2).LE.15.D0)NG    = NG + 1
      IF(DABS(GAUS2).LE.1.D0)GO TO 788
      IF(DABS(GAUS2).GT.1.D0)GO TO 777
  788 XX(IN)=QMIS*QREM*GAUS2*SCLKIK
      TMAT(4,6,IN)=+XX(IN)
      TMAT(5,3,IN)=-XX(IN)
      TMAT(4,7,IN)=-XX(IN)
C  788 XX(IN)=QREM
C      WRITE(53,'(A,1X,A,2(2X,F20.10))')'BULLSHIT',NAME(IN),QREM,XX(IN)
      ENDIF



C======End of processing a row.
   13 CONTINUE


C======Go back to read a new row.
      GO TO 4

C======Jump to here when the structure has been read (EOF found).
   30 CONTINUE
      NTYPE=NTY
      WRITE(53,902)NELEM,NTY
C
C
C
C
C=====PRINT OUT TYPE LIST: EXCLUDE VERTICAL KICKERS FOR NOW? No: kill by excluding type 77.
      WRITE(53,'(A,A)')'1','Summarise the final type list.'
      WRITE(53,954)
      DO 14 I=1,NTY
      IF(ID(I).NE.77)
     +WRITE(53,97)I,ID(I),NAME(I),XX(I),X2(I),YY(I),NUNT(I),TWIST(I),
     +SNAME(I) ,NSOL(I),NTWIST(I)
      IF(ID(I).EQ.1.AND.XX(I).LT.0.D0)WRITE(53,98)
      IF(ID(I).EQ.1.AND.XX(I).LT.0.D0)STOP
   14 CONTINUE
C
C
C
C
C
      WRITE(53,'(A,A)')'1','Sample of the final structure.'

C=====NUMBER OF MAGNETS AND LENGTH OF RING
      IBEND=0
      RLENGE=0.
      IVKOR=0
      ICAV=0
      DO 69 I=1,NELEM
      IF(I.LT. 0.OR.I.GT.200.)GO TO 59
      WRITE(53,60)I,NAME(ITYPE(I)),ID(ITYPE(I)),XX(ITYPE(I)),
     +              X2(ITYPE(I)),YY(ITYPE(I)),RLENGE
   59 CONTINUE
      JID=ID(ITYPE(I))
      GO TO(61,62,62,62,71,67,67,62,62,72,62,62,62,72,62,62),JID
      GO TO 69
   61 RLENGE=RLENGE+XX(ITYPE(I))*1.D0
CDB      WRITE(53,699)I,XX(ITYPE(I))
CDB  699 FORMAT(' ','I,XX',I10,F12.8)  
      GO TO 69
   62 RLENGE=RLENGE+YY(ITYPE(I))*1.D0
      IF(JID.EQ. 2.OR.JID.EQ. 9)IBEND=IBEND+1
      IF(JID.EQ.15.OR.JID.EQ.16)IBEND=IBEND+1
      GO TO 69
   67 RLENGE=RLENGE+YY(ITYPE(I))*0.D0
      IVKOR=IVKOR+1
      GO TO 69
   71 ICAV=ICAV+1
      GO TO 69
   72 RLENGE=RLENGE+YY(ITYPE(I))*1.D0
   69 CONTINUE
      WRITE(53,70)IBEND,IVKOR,ICAV,RLENGE,TOTL,TOTDIP
C
C
C
C
C
C=====TEST TOTAL BEND ANGLES TO SEE IF THEY GIVE ZERO OR 2*PI
      DO 23 II=1,NELEM
      ITY=ITYPE(II)
      IF(ID(ITY).EQ.2.OR.ID(ITY).EQ.15)AH=AH+XX(ITY)
      IF(ID(ITY).EQ.9.OR.ID(ITY).EQ.16)AV=AV+XX(ITY)
   23 CONTINUE
      PIE2=2.*PI
      WRITE(53,905) AH,AV,PIE2
C
C======Write out statistics on the Gaussians.
      IF(NG.GT.0)THEN
      SUMG2 = SUMG2/NG
      SUMG  = SUMG/NG
      SUMG2 = DSQRT(SUMG2)
      WRITE(53,'(1X,A,I10,2(1X,F15.6))')
     + 'Check the Gaussian: calls, mean, r.m.s. ',NG,SUMG,SUMG2
      ENDIF

      SUMG  = 0.D0
      SUMG2 = 0.D0 
      NG    = 0

      DO 25 JG = 1,100000
      CALL RANNOR(GAUS1,GAUS2)
C      IF(DABS(GAUS2).GT.3.D0)WRITE(53,'(1X,I10,1X,A,1X,F8.3)')
C     +                                      JG,' Sample gt 1.0', GAUS2
      IF(DABS(GAUS2).LE.15.D0)SUMG2 = SUMG2 + GAUS2*GAUS2
C      SUMG2 = SUMG2 + DABS(GAUS2)
      IF(DABS(GAUS2).LE.15.D0)SUMG  = SUMG  + GAUS2
      IF(DABS(GAUS2).LE.15.D0)NG    = NG + 1
   25 CONTINUE  

      SUMG2 = SUMG2/NG
      SUMG  = SUMG/NG
      SUMG2 = DSQRT(SUMG2)
      WRITE(53,'(1X,A,I10,2(1X,F15.6))')
     + 'Check the Gaussian: calls, mean, r.m.s. ',NG,SUMG,SUMG2



C
C
C=====FOR RESTARTING RANDOM NUMBER GENERATOR
      CALL RDMOUT(JSEED)
      WRITE(53,956)JSEED
C
C
      RETURN
C
C
C
C
   60 FORMAT(I6,2X,A8,I4,4(F14.5))
C
   70 FORMAT(/,' NUMBER OF BENDING MAGNETS : ',I4,/,
     +' NUMBER OF VERTICALCORRECTION COILS : ',I4,/,
     +' NUMBER OF CAVITIES                 : ',I4,/,
     +' LENGTHS OF THE RING                : ',2F10.4,/,
     +' LENGTH OF HOR. DIPOLES             : ',1F10.4,/)
C
   80 FORMAT(80A1)
   91 FORMAT(' NAME ',A8,' NOT FOUND IN THE TYPE LIST')
   92 FORMAT(6(A4,I7,1X))
  922 FORMAT(5(A4,1X,I8,1X))
 9222 FORMAT(4(A8,1X,I8,1X))
C  95 FORMAT(5(4A1,1X,I8,1X))
   93 FORMAT('1',' THE LATTICE AS READ FROM THE INPUT DATA---')
   94 FORMAT(' SIZE OF TYPE LIST EXCEEDED !!!')
   95 FORMAT(6(1X,A4,I7,1X))
  955 FORMAT(5(1X,A4,1X,I8,1X))
 9555 FORMAT(4(1X,A8,1X,I8,1X))
   96 FORMAT('  FALSE MAGNET TYPE  ',I6)
   97 FORMAT(' ',2I5,1X,A8,3F12.8,I5,2X,F11.6,4X,A8,I4,I10)
   98 FORMAT(' ','A NEGATIVE DRIFT LENGTH HAS BEEN FOUND--SO STOP')
C   99 FORMAT(  A1,I4,1X,A8,3F12.8,I5   ,F11.6,I5)
   99 FORMAT(  A1,I4,1X,A8,3E12.8,I5   ,F11.6,I5)
C 199 FORMAT(  A1,I4,1X,2X,I2,1A1,3X,3F12.8,I5   ,F11.6,I5)
  199 FORMAT(8X,I2,1A1,3X)
   89 FORMAT(  A1,I4,1X,A8,3F12.8,I5   ,F11.6,I5)
  801 FORMAT(9X,I1)
  802 FORMAT(' ','LATTICE FORMAT= ',I1,/,
     +           'NEW RANDOM SEED= ',I20,/,
     +           'DEF.RANDOM SEED= ',I20)
  803 FORMAT(' ',' STOP--BAD LATTICE FORMAT ')
  805 FORMAT(8X,I2)
  901 FORMAT(20A4)
  902 FORMAT(' LATTICE FILLED UP TO ',I7,', TYPE LIST FILLED UP TO ',I7,
     +       /,/,/)
C
  905 FORMAT(' TOTAL BENDING ANGLE',
     + /' HORIZONTAL ',F15.10,
     + /' VERTICAL   ',F15.10,
     + /' 2.*PI      ',F15.10,/)
C
  907 FORMAT(' SIZE OF LATTICE LIST EXCEEDED !!!',/' LTOT =',F11.4,
     +' ELEMENT=',I6)
  950 FORMAT(' SOMETHING IS WRONG WITH THE INPUT DATA-FILE ')
  951 FORMAT(1X,80A1)
  952 FORMAT('0',//,'  TYPE NAME      STRENGTH1  STRENGTH2   LENGTH',
     +  '   NO.SLICES  SFLAG GMATRIX FLAG')
  953 FORMAT('0','SANDWICH STRUCTURE FOCUSSING DIPOLES NOT ALLOWED')
  954 FORMAT('0',//,'       TYPE NAME      STRENGTH1   STRENGTH2  ',
     +' LENGTH      SLICES  SFLAG                  GMATRIX ')
  956 FORMAT('0','LAST RANDOM GENERATOR SEED=',I20)
      END
